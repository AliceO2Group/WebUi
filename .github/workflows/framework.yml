name: Framework

on:
  pull_request:
    paths:
      - 'Framework/**/*'
      - '.github/workflows/framework.yml'
  push:
    branches:
      - 'master'
      - 'dev'
jobs:
  test:
    name: Tests on macos-latest    
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: (cd Framework/Backend; openssl req -new  -newkey rsa:2048 -days 365 -nodes -x509 -subj "/C=CH/ST=Test/L=Test/O=Tst/CN=localhost" -keyout test.key -out test.pem)
      - run: (cd Framework; npm ci )
      - run: (cd Framework; npm test )
  coverage:
    name: Tests & coverage on ubuntu-18.04
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: (cd Framework; npm ci )
      - run: (cd Framework; npm run coverage )
      - run: (cd Framework; ./node_modules/.bin/nyc report --reporter=text-lcov > coverage.lcov)
      - name: Send codecov report for Framework
        uses: codecov/codecov-action@v1.0.13
        with:
          token: ${{ secrets. NEW_CODECOV_TOKEN }}
          flags: framework
          fail_ci_if_error: true
  windows:
    name: Test on windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: cd Framework; npm ci
      - run: cd Framework; npm test
  control-compatibility:
    name: Control compatibility test 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-18.04]
    steps:
      - name: Run Control tests by using `@aliceo2/web-ui` from local `../Framework`
        run : (echo "Run Control tests by using @aliceo2/web-ui from local ../Framework";) 
      - uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: (cd Control; npm ci)
      - run: (cd Control; npm i --save ../Framework)
      - name: Check @aliceo2/web-ui was successfully linked locally
        run: (cd Control; if [[ -z $(npm list @aliceo2/web-ui --link | grep @aliceo2/web-ui) ]]; then exit 1; else echo "@aliceo2/web-ui successfully linked"; fi;)
      - run: (cd Control; npm test )
  qualitycontrol-compatibility:
    name: QualityControl compatibility test 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-18.04]
    steps:
      - name: Run QualityControl tests by using `@aliceo2/web-ui` from local `../Framework`
        run : (echo "Run QualityControl tests by using @aliceo2/web-ui from local ../Framework";) 
      - uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: (cd QualityControl; npm ci)
      - run: (cd QualityControl; npm i --save ../Framework)
      - name: Check @aliceo2/web-ui was successfully linked locally
        run: (cd QualityControl; if [[ -z $(npm list @aliceo2/web-ui --link | grep @aliceo2/web-ui) ]]; then exit 1; else echo "@aliceo2/web-ui successfully linked"; fi;)
      - run: (cd QualityControl; npm test )
  infologger-compatibility:
    name: InfoLogger compatibility test 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-18.04]
    steps:
      - name: Run InfoLogger tests by using `@aliceo2/web-ui` from local `../Framework`
        run : (echo "Run InfoLogger tests by using @aliceo2/web-ui from local ../Framework";) 
      - uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: (cd InfoLogger; npm ci)
      - run: (cd InfoLogger; npm i --save ../Framework)
      - name: Check @aliceo2/web-ui was successfully linked locally
        run: (cd InfoLogger; if [[ -z $(npm list @aliceo2/web-ui --link | grep @aliceo2/web-ui) ]]; then exit 1; else echo "@aliceo2/web-ui successfully linked"; fi;)
      - run: (cd InfoLogger; npm test )
